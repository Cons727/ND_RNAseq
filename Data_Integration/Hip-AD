# ------- Integrate datasets -------
load("../GSE67333/GSE67333_data.RData")
clinical_data_GSE67333 <- CDGSE67333
data_GSE67333 <- x_norm_f
all(colnames(data_GSE67333) == rownames(clinical_data_GSE67333))

load("../AIBS/AIBS_data.RData")
clinical_data_AIBS <- AIBS_metadata
clinical_data_AIBS <- clinical_data_AIBS[grep("HIP", clinical_data_AIBS$sample),]
data_AIBS <- x_norm_f
data_AIBS <- data_AIBS[, grep("HIP", colnames(data_AIBS))]
clinical_data_AIBS <- clinical_data_AIBS[match(colnames(data_AIBS), clinical_data_AIBS$sample),]
all(colnames(data_AIBS) == clinical_data_AIBS$sample)

#Common genes
common_genes <- sort(intersect(rownames(data_AIBS), rownames(data_GSE67333)))
AD_HIP_dataset <- cbind(data_AIBS[common_genes,], data_GSE67333[common_genes,])

#Pre-processing
png(filename = "AD-Hip-densities_before.png", width = 800, height = 800)
plotDensities(AD_HIP_dataset, legend=F)
dev.off()
AD_HIP_dataset_qn <- normalize.quantiles(AD_HIP_dataset)
colnames(AD_HIP_dataset_qn) <- colnames(AD_HIP_dataset)
rownames(AD_HIP_dataset_qn) <- rownames(AD_HIP_dataset)
png(filename = "AD-HIP-densities_after.png", width = 800, height = 800)
plotDensities(AD_HIP_dataset_qn, legend=F)
dev.off()

AD_HIP_clinical <- data.frame(batch=c(rep(1, ncol(data_AIBS)), rep(2, ncol(data_GSE67333))), disease=c(ifelse(clinical_data_AIBS$condition == "CTL", 1, 2), ifelse(clinical_data_GSE67333$condition == "Control", 1, 2)))
AD_HIP_clinical$Sex <- c(clinical_data_AIBS$sex, clinical_data_GSE67333$sex)
AD_HIP_clinical$Age <- c(clinical_data_AIBS$age, clinical_data_GSE67333$age)
AD_HIP_clinical$Braak <- c(clinical_data_AIBS$braak, clinical_data_GSE67333$braak)
rownames(AD_HIP_clinical) <- c(clinical_data_AIBS$sample, rownames(clinical_data_GSE67333))

#PCA
AD_HIP_dataset_qn_mad <- apply(AD_HIP_dataset_qn, 1, mad)
AD_HIP_dataset_qn_pca <- prcomp(AD_HIP_dataset_qn[order(AD_HIP_dataset_qn_mad, decreasing=T)[1:2000],])
png("PCA_before_AD-Hip.png", width = 8, height = 8, units = 'in', res = 200)
plot(x=AD_HIP_dataset_qn_pca$rotation[,2], y=AD_HIP_dataset_qn_pca$rotation[,1], ylab=paste("PC2 (", round(summary(AD_HIP_dataset_qn_pca)$importance[2,2]*100), "%)"), xlab=paste("PC1 (", round(summary(AD_HIP_dataset_qn_pca)$importance[2,1]*100), "%)"), pch=19, col=AD_HIP_clinical$batch, main="HIP-AD before ComBat")
legend("bottomright", legend = c("Batch 1", "Batch 2"), col = c(1, 2), pch = 19, bty = "n", pt.cex = 2, cex = 1.5, inset = c(0.02, 0.02))
dev.off()
plot(x=AD_HIP_dataset_qn_pca$rotation[,2], y=AD_HIP_dataset_qn_pca$rotation[,1], xlab="PC 2", ylab="PC 1", pch=19, col=AD_HIP_clinical$disease)

#Combat
modcombat <- model.matrix(~1, data=data.frame(cmb=AD_HIP_clinical$batch))
AD_HIP_dataset_qn_combat <- ComBat(dat=AD_HIP_dataset_qn, batch=AD_HIP_clinical$batch, mod=modcombat, par.prior=TRUE, prior.plots=FALSE)
AD_HIP_dataset_qn_combat_mad <- apply(AD_HIP_dataset_qn_combat, 1, mad)
AD_HIP_dataset_qn_combat_pca <- prcomp(AD_HIP_dataset_qn_combat[order(AD_HIP_dataset_qn_combat_mad, decreasing=T)[1:2000],])
png("PCA_after_AD-Hip.png", width = 8, height = 8, units = 'in', res = 200)
plot(x=AD_HIP_dataset_qn_combat_pca$rotation[,2], y=AD_HIP_dataset_qn_combat_pca$rotation[,1], ylab=paste("PC2 (", round(summary(AD_HIP_dataset_qn_combat_pca)$importance[2,2]*100), "%)"), xlab=paste("PC1 (", round(summary(AD_HIP_dataset_qn_combat_pca)$importance[2,1]*100), "%)"), pch=19, col=AD_HIP_clinical$batch, main="HIP-AD after ComBat")
legend("topright", legend = c("Batch 1", "Batch 2"), col = c(1, 2), pch = 19, bty = "n", pt.cex = 2, cex = 1.5, inset = c(0.02, 0.02))
dev.off()
plot(x=AD_HIP_dataset_qn_combat_pca$rotation[,2], y=AD_HIP_dataset_qn_combat_pca$rotation[,1], xlab="PC 2", ylab="PC 1", pch=19, col=AD_HIP_clinical$disease)
plot(x=AD_HIP_dataset_qn_combat_pca$rotation[,2], y=AD_HIP_dataset_qn_combat_pca$rotation[,1], xlab="PC 2", ylab="PC 1", pch=19, col=ifelse(AD_HIP_clinical$Sex == 'M', 1, 2))
plot(x=AD_HIP_dataset_qn_combat_pca$rotation[,2], y=AD_HIP_dataset_qn_combat_pca$rotation[,1], xlab="PC 2", ylab="PC 1", pch=19, col=AD_HIP_clinical$Braak)

#Save AD_Painson compound dataset
save(AD_HIP_dataset_qn_combat, AD_HIP_clinical, file="AD_HIP_data.RData")
